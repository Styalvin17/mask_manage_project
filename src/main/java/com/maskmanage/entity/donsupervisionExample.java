package com.maskmanage.entity;

import java.util.ArrayList;
import java.util.List;

public class donsupervisionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public donsupervisionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSupervisionidIsNull() {
            addCriterion("supervisionId is null");
            return (Criteria) this;
        }

        public Criteria andSupervisionidIsNotNull() {
            addCriterion("supervisionId is not null");
            return (Criteria) this;
        }

        public Criteria andSupervisionidEqualTo(Integer value) {
            addCriterion("supervisionId =", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidNotEqualTo(Integer value) {
            addCriterion("supervisionId <>", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidGreaterThan(Integer value) {
            addCriterion("supervisionId >", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidGreaterThanOrEqualTo(Integer value) {
            addCriterion("supervisionId >=", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidLessThan(Integer value) {
            addCriterion("supervisionId <", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidLessThanOrEqualTo(Integer value) {
            addCriterion("supervisionId <=", value, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidIn(List<Integer> values) {
            addCriterion("supervisionId in", values, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidNotIn(List<Integer> values) {
            addCriterion("supervisionId not in", values, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidBetween(Integer value1, Integer value2) {
            addCriterion("supervisionId between", value1, value2, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupervisionidNotBetween(Integer value1, Integer value2) {
            addCriterion("supervisionId not between", value1, value2, "supervisionid");
            return (Criteria) this;
        }

        public Criteria andSupidIsNull() {
            addCriterion("supId is null");
            return (Criteria) this;
        }

        public Criteria andSupidIsNotNull() {
            addCriterion("supId is not null");
            return (Criteria) this;
        }

        public Criteria andSupidEqualTo(Integer value) {
            addCriterion("supId =", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidNotEqualTo(Integer value) {
            addCriterion("supId <>", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidGreaterThan(Integer value) {
            addCriterion("supId >", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidGreaterThanOrEqualTo(Integer value) {
            addCriterion("supId >=", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidLessThan(Integer value) {
            addCriterion("supId <", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidLessThanOrEqualTo(Integer value) {
            addCriterion("supId <=", value, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidIn(List<Integer> values) {
            addCriterion("supId in", values, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidNotIn(List<Integer> values) {
            addCriterion("supId not in", values, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidBetween(Integer value1, Integer value2) {
            addCriterion("supId between", value1, value2, "supid");
            return (Criteria) this;
        }

        public Criteria andSupidNotBetween(Integer value1, Integer value2) {
            addCriterion("supId not between", value1, value2, "supid");
            return (Criteria) this;
        }

        public Criteria andDonidIsNull() {
            addCriterion("donId is null");
            return (Criteria) this;
        }

        public Criteria andDonidIsNotNull() {
            addCriterion("donId is not null");
            return (Criteria) this;
        }

        public Criteria andDonidEqualTo(Integer value) {
            addCriterion("donId =", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidNotEqualTo(Integer value) {
            addCriterion("donId <>", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidGreaterThan(Integer value) {
            addCriterion("donId >", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidGreaterThanOrEqualTo(Integer value) {
            addCriterion("donId >=", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidLessThan(Integer value) {
            addCriterion("donId <", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidLessThanOrEqualTo(Integer value) {
            addCriterion("donId <=", value, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidIn(List<Integer> values) {
            addCriterion("donId in", values, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidNotIn(List<Integer> values) {
            addCriterion("donId not in", values, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidBetween(Integer value1, Integer value2) {
            addCriterion("donId between", value1, value2, "donid");
            return (Criteria) this;
        }

        public Criteria andDonidNotBetween(Integer value1, Integer value2) {
            addCriterion("donId not between", value1, value2, "donid");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusIsNull() {
            addCriterion("donsupStatus is null");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusIsNotNull() {
            addCriterion("donsupStatus is not null");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusEqualTo(Integer value) {
            addCriterion("donsupStatus =", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusNotEqualTo(Integer value) {
            addCriterion("donsupStatus <>", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusGreaterThan(Integer value) {
            addCriterion("donsupStatus >", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("donsupStatus >=", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusLessThan(Integer value) {
            addCriterion("donsupStatus <", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusLessThanOrEqualTo(Integer value) {
            addCriterion("donsupStatus <=", value, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusIn(List<Integer> values) {
            addCriterion("donsupStatus in", values, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusNotIn(List<Integer> values) {
            addCriterion("donsupStatus not in", values, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusBetween(Integer value1, Integer value2) {
            addCriterion("donsupStatus between", value1, value2, "donsupstatus");
            return (Criteria) this;
        }

        public Criteria andDonsupstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("donsupStatus not between", value1, value2, "donsupstatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table donsupervision
     *
     * @mbggenerated do_not_delete_during_merge Sat May 30 19:20:01 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table donsupervision
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}