package com.maskmanage.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class requirementExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public requirementExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andReqridIsNull() {
            addCriterion("reqrId is null");
            return (Criteria) this;
        }

        public Criteria andReqridIsNotNull() {
            addCriterion("reqrId is not null");
            return (Criteria) this;
        }

        public Criteria andReqridEqualTo(Integer value) {
            addCriterion("reqrId =", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotEqualTo(Integer value) {
            addCriterion("reqrId <>", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridGreaterThan(Integer value) {
            addCriterion("reqrId >", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqrId >=", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridLessThan(Integer value) {
            addCriterion("reqrId <", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridLessThanOrEqualTo(Integer value) {
            addCriterion("reqrId <=", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridIn(List<Integer> values) {
            addCriterion("reqrId in", values, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotIn(List<Integer> values) {
            addCriterion("reqrId not in", values, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridBetween(Integer value1, Integer value2) {
            addCriterion("reqrId between", value1, value2, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotBetween(Integer value1, Integer value2) {
            addCriterion("reqrId not between", value1, value2, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqrnameIsNull() {
            addCriterion("reqrName is null");
            return (Criteria) this;
        }

        public Criteria andReqrnameIsNotNull() {
            addCriterion("reqrName is not null");
            return (Criteria) this;
        }

        public Criteria andReqrnameEqualTo(String value) {
            addCriterion("reqrName =", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameNotEqualTo(String value) {
            addCriterion("reqrName <>", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameGreaterThan(String value) {
            addCriterion("reqrName >", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameGreaterThanOrEqualTo(String value) {
            addCriterion("reqrName >=", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameLessThan(String value) {
            addCriterion("reqrName <", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameLessThanOrEqualTo(String value) {
            addCriterion("reqrName <=", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameLike(String value) {
            addCriterion("reqrName like", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameNotLike(String value) {
            addCriterion("reqrName not like", value, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameIn(List<String> values) {
            addCriterion("reqrName in", values, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameNotIn(List<String> values) {
            addCriterion("reqrName not in", values, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameBetween(String value1, String value2) {
            addCriterion("reqrName between", value1, value2, "reqrname");
            return (Criteria) this;
        }

        public Criteria andReqrnameNotBetween(String value1, String value2) {
            addCriterion("reqrName not between", value1, value2, "reqrname");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andReqrtimeIsNull() {
            addCriterion("reqrTime is null");
            return (Criteria) this;
        }

        public Criteria andReqrtimeIsNotNull() {
            addCriterion("reqrTime is not null");
            return (Criteria) this;
        }

        public Criteria andReqrtimeEqualTo(Date value) {
            addCriterion("reqrTime =", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeNotEqualTo(Date value) {
            addCriterion("reqrTime <>", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeGreaterThan(Date value) {
            addCriterion("reqrTime >", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("reqrTime >=", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeLessThan(Date value) {
            addCriterion("reqrTime <", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeLessThanOrEqualTo(Date value) {
            addCriterion("reqrTime <=", value, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeIn(List<Date> values) {
            addCriterion("reqrTime in", values, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeNotIn(List<Date> values) {
            addCriterion("reqrTime not in", values, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeBetween(Date value1, Date value2) {
            addCriterion("reqrTime between", value1, value2, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrtimeNotBetween(Date value1, Date value2) {
            addCriterion("reqrTime not between", value1, value2, "reqrtime");
            return (Criteria) this;
        }

        public Criteria andReqrstatusIsNull() {
            addCriterion("reqrStatus is null");
            return (Criteria) this;
        }

        public Criteria andReqrstatusIsNotNull() {
            addCriterion("reqrStatus is not null");
            return (Criteria) this;
        }

        public Criteria andReqrstatusEqualTo(Integer value) {
            addCriterion("reqrStatus =", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusNotEqualTo(Integer value) {
            addCriterion("reqrStatus <>", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusGreaterThan(Integer value) {
            addCriterion("reqrStatus >", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqrStatus >=", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusLessThan(Integer value) {
            addCriterion("reqrStatus <", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusLessThanOrEqualTo(Integer value) {
            addCriterion("reqrStatus <=", value, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusIn(List<Integer> values) {
            addCriterion("reqrStatus in", values, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusNotIn(List<Integer> values) {
            addCriterion("reqrStatus not in", values, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusBetween(Integer value1, Integer value2) {
            addCriterion("reqrStatus between", value1, value2, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrstatusNotBetween(Integer value1, Integer value2) {
            addCriterion("reqrStatus not between", value1, value2, "reqrstatus");
            return (Criteria) this;
        }

        public Criteria andReqrhosidIsNull() {
            addCriterion("reqrHosId is null");
            return (Criteria) this;
        }

        public Criteria andReqrhosidIsNotNull() {
            addCriterion("reqrHosId is not null");
            return (Criteria) this;
        }

        public Criteria andReqrhosidEqualTo(Integer value) {
            addCriterion("reqrHosId =", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidNotEqualTo(Integer value) {
            addCriterion("reqrHosId <>", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidGreaterThan(Integer value) {
            addCriterion("reqrHosId >", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqrHosId >=", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidLessThan(Integer value) {
            addCriterion("reqrHosId <", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidLessThanOrEqualTo(Integer value) {
            addCriterion("reqrHosId <=", value, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidIn(List<Integer> values) {
            addCriterion("reqrHosId in", values, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidNotIn(List<Integer> values) {
            addCriterion("reqrHosId not in", values, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidBetween(Integer value1, Integer value2) {
            addCriterion("reqrHosId between", value1, value2, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andReqrhosidNotBetween(Integer value1, Integer value2) {
            addCriterion("reqrHosId not between", value1, value2, "reqrhosid");
            return (Criteria) this;
        }

        public Criteria andCheckIsNull() {
            addCriterion("check is null");
            return (Criteria) this;
        }

        public Criteria andCheckIsNotNull() {
            addCriterion("check is not null");
            return (Criteria) this;
        }

        public Criteria andCheckEqualTo(String value) {
            addCriterion("check =", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckNotEqualTo(String value) {
            addCriterion("check <>", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckGreaterThan(String value) {
            addCriterion("check >", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckGreaterThanOrEqualTo(String value) {
            addCriterion("check >=", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckLessThan(String value) {
            addCriterion("check <", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckLessThanOrEqualTo(String value) {
            addCriterion("check <=", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckLike(String value) {
            addCriterion("check like", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckNotLike(String value) {
            addCriterion("check not like", value, "check");
            return (Criteria) this;
        }

        public Criteria andCheckIn(List<String> values) {
            addCriterion("check in", values, "check");
            return (Criteria) this;
        }

        public Criteria andCheckNotIn(List<String> values) {
            addCriterion("check not in", values, "check");
            return (Criteria) this;
        }

        public Criteria andCheckBetween(String value1, String value2) {
            addCriterion("check between", value1, value2, "check");
            return (Criteria) this;
        }

        public Criteria andCheckNotBetween(String value1, String value2) {
            addCriterion("check not between", value1, value2, "check");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table requirement
     *
     * @mbggenerated do_not_delete_during_merge Wed May 27 13:01:29 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table requirement
     *
     * @mbggenerated Wed May 27 13:01:29 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}