package com.maskmanage.entity;

import java.util.ArrayList;
import java.util.List;

public class maskusageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public maskusageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUsageidIsNull() {
            addCriterion("usageId is null");
            return (Criteria) this;
        }

        public Criteria andUsageidIsNotNull() {
            addCriterion("usageId is not null");
            return (Criteria) this;
        }

        public Criteria andUsageidEqualTo(Integer value) {
            addCriterion("usageId =", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidNotEqualTo(Integer value) {
            addCriterion("usageId <>", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidGreaterThan(Integer value) {
            addCriterion("usageId >", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidGreaterThanOrEqualTo(Integer value) {
            addCriterion("usageId >=", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidLessThan(Integer value) {
            addCriterion("usageId <", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidLessThanOrEqualTo(Integer value) {
            addCriterion("usageId <=", value, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidIn(List<Integer> values) {
            addCriterion("usageId in", values, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidNotIn(List<Integer> values) {
            addCriterion("usageId not in", values, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidBetween(Integer value1, Integer value2) {
            addCriterion("usageId between", value1, value2, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsageidNotBetween(Integer value1, Integer value2) {
            addCriterion("usageId not between", value1, value2, "usageid");
            return (Criteria) this;
        }

        public Criteria andUsagetitleIsNull() {
            addCriterion("usageTitle is null");
            return (Criteria) this;
        }

        public Criteria andUsagetitleIsNotNull() {
            addCriterion("usageTitle is not null");
            return (Criteria) this;
        }

        public Criteria andUsagetitleEqualTo(String value) {
            addCriterion("usageTitle =", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleNotEqualTo(String value) {
            addCriterion("usageTitle <>", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleGreaterThan(String value) {
            addCriterion("usageTitle >", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleGreaterThanOrEqualTo(String value) {
            addCriterion("usageTitle >=", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleLessThan(String value) {
            addCriterion("usageTitle <", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleLessThanOrEqualTo(String value) {
            addCriterion("usageTitle <=", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleLike(String value) {
            addCriterion("usageTitle like", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleNotLike(String value) {
            addCriterion("usageTitle not like", value, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleIn(List<String> values) {
            addCriterion("usageTitle in", values, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleNotIn(List<String> values) {
            addCriterion("usageTitle not in", values, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleBetween(String value1, String value2) {
            addCriterion("usageTitle between", value1, value2, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andUsagetitleNotBetween(String value1, String value2) {
            addCriterion("usageTitle not between", value1, value2, "usagetitle");
            return (Criteria) this;
        }

        public Criteria andReqridIsNull() {
            addCriterion("reqrId is null");
            return (Criteria) this;
        }

        public Criteria andReqridIsNotNull() {
            addCriterion("reqrId is not null");
            return (Criteria) this;
        }

        public Criteria andReqridEqualTo(Integer value) {
            addCriterion("reqrId =", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotEqualTo(Integer value) {
            addCriterion("reqrId <>", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridGreaterThan(Integer value) {
            addCriterion("reqrId >", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridGreaterThanOrEqualTo(Integer value) {
            addCriterion("reqrId >=", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridLessThan(Integer value) {
            addCriterion("reqrId <", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridLessThanOrEqualTo(Integer value) {
            addCriterion("reqrId <=", value, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridIn(List<Integer> values) {
            addCriterion("reqrId in", values, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotIn(List<Integer> values) {
            addCriterion("reqrId not in", values, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridBetween(Integer value1, Integer value2) {
            addCriterion("reqrId between", value1, value2, "reqrid");
            return (Criteria) this;
        }

        public Criteria andReqridNotBetween(Integer value1, Integer value2) {
            addCriterion("reqrId not between", value1, value2, "reqrid");
            return (Criteria) this;
        }

        public Criteria andUsagedescIsNull() {
            addCriterion("usageDesc is null");
            return (Criteria) this;
        }

        public Criteria andUsagedescIsNotNull() {
            addCriterion("usageDesc is not null");
            return (Criteria) this;
        }

        public Criteria andUsagedescEqualTo(String value) {
            addCriterion("usageDesc =", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescNotEqualTo(String value) {
            addCriterion("usageDesc <>", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescGreaterThan(String value) {
            addCriterion("usageDesc >", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescGreaterThanOrEqualTo(String value) {
            addCriterion("usageDesc >=", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescLessThan(String value) {
            addCriterion("usageDesc <", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescLessThanOrEqualTo(String value) {
            addCriterion("usageDesc <=", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescLike(String value) {
            addCriterion("usageDesc like", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescNotLike(String value) {
            addCriterion("usageDesc not like", value, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescIn(List<String> values) {
            addCriterion("usageDesc in", values, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescNotIn(List<String> values) {
            addCriterion("usageDesc not in", values, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescBetween(String value1, String value2) {
            addCriterion("usageDesc between", value1, value2, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagedescNotBetween(String value1, String value2) {
            addCriterion("usageDesc not between", value1, value2, "usagedesc");
            return (Criteria) this;
        }

        public Criteria andUsagestatusIsNull() {
            addCriterion("usageStatus is null");
            return (Criteria) this;
        }

        public Criteria andUsagestatusIsNotNull() {
            addCriterion("usageStatus is not null");
            return (Criteria) this;
        }

        public Criteria andUsagestatusEqualTo(Integer value) {
            addCriterion("usageStatus =", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusNotEqualTo(Integer value) {
            addCriterion("usageStatus <>", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusGreaterThan(Integer value) {
            addCriterion("usageStatus >", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("usageStatus >=", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusLessThan(Integer value) {
            addCriterion("usageStatus <", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusLessThanOrEqualTo(Integer value) {
            addCriterion("usageStatus <=", value, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusIn(List<Integer> values) {
            addCriterion("usageStatus in", values, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusNotIn(List<Integer> values) {
            addCriterion("usageStatus not in", values, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusBetween(Integer value1, Integer value2) {
            addCriterion("usageStatus between", value1, value2, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagestatusNotBetween(Integer value1, Integer value2) {
            addCriterion("usageStatus not between", value1, value2, "usagestatus");
            return (Criteria) this;
        }

        public Criteria andUsagehosidIsNull() {
            addCriterion("usageHosId is null");
            return (Criteria) this;
        }

        public Criteria andUsagehosidIsNotNull() {
            addCriterion("usageHosId is not null");
            return (Criteria) this;
        }

        public Criteria andUsagehosidEqualTo(Integer value) {
            addCriterion("usageHosId =", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidNotEqualTo(Integer value) {
            addCriterion("usageHosId <>", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidGreaterThan(Integer value) {
            addCriterion("usageHosId >", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidGreaterThanOrEqualTo(Integer value) {
            addCriterion("usageHosId >=", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidLessThan(Integer value) {
            addCriterion("usageHosId <", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidLessThanOrEqualTo(Integer value) {
            addCriterion("usageHosId <=", value, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidIn(List<Integer> values) {
            addCriterion("usageHosId in", values, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidNotIn(List<Integer> values) {
            addCriterion("usageHosId not in", values, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidBetween(Integer value1, Integer value2) {
            addCriterion("usageHosId between", value1, value2, "usagehosid");
            return (Criteria) this;
        }

        public Criteria andUsagehosidNotBetween(Integer value1, Integer value2) {
            addCriterion("usageHosId not between", value1, value2, "usagehosid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maskusage
     *
     * @mbggenerated do_not_delete_during_merge Sat May 30 19:20:01 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table maskusage
     *
     * @mbggenerated Sat May 30 19:20:01 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}